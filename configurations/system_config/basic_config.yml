---
- name: Basic Server Configuration for Ubuntu
  hosts: your_ubuntu_servers  # Replace with the actual host or group of hosts
  become: yes

  tasks:
    - name: Set hostname and timezone
      hostname:
        name: "{{ server.hostname }}"
      timezone:
        name: "{{ server.timezone }}"

    - name: Create and configure users
      user:
        name: "{{ item.name }}"
        groups: "{{ item.groups }}"
        password: "{{ item.password }}"
        update_password: always
      with_items: "{{ server.users }}"

    - name: Network Configuration
      networkd_interface:
        name: "{{ item.name }}"
        dhcp4: yes
        state: "{{ item.state }}"
      with_items: "{{ network.interfaces }}"
      when: item.method == 'dhcp'

    - name: Network Configuration (static)
      networkd_interface:
        name: "{{ item.name }}"
        address: "{{ item.address }}"
        netmask: "{{ item.netmask }}"
        gateway: "{{ item.gateway }}"
        dns_nameservers: "{{ item.dns_nameservers }}"
        state: "{{ item.state }}"
      with_items: "{{ network.interfaces }}"
      when: item.method == 'static'

    - name: SSH Configuration
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: "{{ item.state }}"
      with_items:
        - { regexp: '^Port', line: 'Port {{ ssh.port }}', state: 'present' }  # Change SSH port if desired
        - { regexp: '^PermitRootLogin', line: 'PermitRootLogin {{ ssh.allow_root_login }}', state: 'present' }  # Adjust root login permissions

    - name: Firewall Configuration
      ufw:
        rule: "{{ item.rule }}"  # Specify firewall rule (allow/deny)
        port: "{{ item.port }}"  # Specify port number
        state: "{{ item.state }}"  # Specify state (enabled/disabled)
      with_items: "{{ firewall.rules }}"

    - name: Disable Unused Services
      service:
        name: "{{ item.service }}"
        enabled: no
        state: "{{ item.state }}"
      with_items: "{{ services }}"

    - name: Update and Upgrade Packages
      apt:
        update_cache: "{{ package_management.update_cache | default(true) }}"
        upgrade: "{{ package_management.upgrade | default(false) }}"  # Set to 'true' to perform system upgrade
